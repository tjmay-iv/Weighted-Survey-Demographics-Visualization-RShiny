shiny::runApp('Test')
runApp('Test')
joined.pop <- readRDS("C:\\Users\\tjmay\\OneDrive\\Documents\\R Projects\\Survey Demographics\\data\\Joined_Pop.rds")
Census.2020_raw <- read.csv("data/2020 Census/Race_2020.csv")
Census.2020 <- as_tibble(cbind(names(Census.2020_raw), t(Census.2020_raw))) %>%
row_to_names(1) %>%
select(c(1:10)) %>%
mutate(across(everything(), ~ str_replace_all(string = .x,
pattern = c(","),
replacement = "")))
library(tidyverse)
library(haven)
library(janitor)
library(gmodels)
library(cdlTools)
library(highcharter)
library(ggplot2)
colnames(Census.2020) <- colnames(Census.2020) %>%
str_trim(side = "both") %>%
str_replace("\\.$", "") %>%
make.names()
Census.2020 <- as_tibble(cbind(names(Census.2020_raw), t(Census.2020_raw))) %>%
row_to_names(1) %>%
select(c(1:10)) %>%
mutate(across(everything(), ~ str_replace_all(string = .x,
pattern = c(","),
replacement = "")))
colnames(Census.2020) <- colnames(Census.2020) %>%
str_trim(side = "both") %>%
str_replace("\\.$", "") %>%
make.names()
ANES <- read_sav("data/ANES_Cumulative.sav") %>% select(VCF0009z, VCF0004, VCF0102,
VCF0105a, VCF0107, VCF0112,
VCF0114, VCF0115, VCF0128,
VCF0129, VCF0901a, VCF0111)
gc()
ANES <- read_sav("data/ANES_Cumulative.sav") %>% select(VCF0009z, VCF0004, VCF0102,
VCF0105a, VCF0107, VCF0112,
VCF0114, VCF0115, VCF0128,
VCF0129, VCF0901a, VCF0111)
ANES$State <- sapply(ANES$VCF0901a, cdlTools::fips, to = "Name")
ANES.2020 <- ANES %>% subset(VCF0004 == 2020)
state.pop_cen <- Census.2020[,c(1,2)] %>%
rename(State = Label..Grouping, Census.total = Total.)
state.pop_cen$Census.total <- state.pop_cen$Census.total %>%
str_replace_all(",", "") %>%
as.numeric()
state.pop_cen$State <- state.pop_cen$State %>%
str_replace_all("\\.", " ")
state.pop_cen <- state.pop_cen %>% mutate(
Census.pct = (Census.total / state.pop_cen$Census.total[state.pop_cen$State == "United States"]) * 100
)
state.pop_ANES <- ANES.2020 %>% group_by(State) %>%
summarise(ANES.total = n()) %>%
mutate(ANES.pct = (ANES.total / nrow(ANES.2020)) * 100)
weighted.state.pop_ANES <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0105a) %>%
mutate(ANES.pctWT = (n / 14391) * 100) %>%
rename(n.WT = n)
joined.pop <- full_join(weighted.state.pop_ANES, state.pop_ANES) %>%
full_join(state.pop_cen)
joined.pop$Difference <- (joined.pop$ANES.pct - joined.pop$Census.pct) %>% round(digits = 3)
joined.pop$Difference.wt <- (joined.pop$ANES.pctWT - joined.pop$Census.pct) %>% round(digits = 3)
# Integrate this into main code
joined.pop <- joined.pop %>% rename(ANES.totalWT = n.WT)
Census.Race <- read.csv("C:/Users/tjmay/Downloads/DECENNIALPL2020.P1-2024-08-23T173025.csv")
Census.Race
View(Census.Race)
Census.Race[Census.Race$Total. == "",]
Census.Race[Census.Race$Total. == "",] <- NULL
Census.Race %>% subset(Total. == "")
Census.Race %>% subset(Total. != "")
Census.Race %>% subset(Total. != "") %>% View()
Census.Race <- Census.Race %>% subset(Total. != "")
Census.Race %>% select(c(1,2,3,5))
Census.Black <- Census.Race %>% select(c(1,2,3,5))
View(Census.Black)
colnames(Census.Black) <- c("State", "Total", "One_Race", "One_Race.Black")
Census.Black$One_Race / Census.Black$One_Race.Black
Census.Black <- Census.Race %>% select(c(1,2,3,5)) %>% str_replace_all(",", "")
Census.Black
Census.Black <- Census.Race %>% select(c(1,2,3,5))
Census.Black$
colnames(Census.Black) <- c("State", "Total", "One_Race", "One_Race.Black")
colnames(Census.Black) <- c("State", "Total", "One_Race", "One_Race.Black")
Census.Black$One_Race <- Census.Black$One_Race %>% str_replace_all(",", "")
Census.Black$One_Race
Census.Black$One_Race <- as.numeric(Census.Black$One_Race)
Census.Black$One_Race
Census.Black$One_Race.Black <- Census.Black$One_Race.Black %>% str_replace_all(",", "")
Census.Black$One_Race.Black <- as.numeric(Census.Black$One_Race.Black)
Census.Black$One_Race.Black
Census.Black$One_Race / Census.Black$One_Race.Black
Census.Black$One_Race.Black / Census.Black$One_Race
Census.Black %>% mutate(Black.pct = (Census.Black$One_Race.Black / Census.Black$One_Race))
Census.Black <- Census.Black %>% mutate(Black.pct = (Census.Black$One_Race.Black / Census.Black$One_Race))
Census.Black$Black.pct <- Census.Black$Black.pct %>% round(digits = 3)
Census.Black$Black.pct
View(ANES.2020)
ANES.2020$VCF0105a
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(VCF0105a) %>% View()
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State)
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(VCF0105a)
ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a) %>%
filter(VCF0105a == 2)
ANES.Black <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a) %>%
filter(VCF0105a == 2)
ANES.Total <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State)
ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State)
ANES.Total <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State) %>%
rename(Total.Black = n)
ANES.Total
ANES.Black
full_join(ANES.Black, ANES.Total)
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(PCT.Black = (n / Total.Black))
ANES.JoinedBlack
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(PCT.Black = round((n / Total.Black), digits = 3))
ANES.JoinedBlack
Census.Black
full_join(ANES.JoinedBlack, Census.Black)
full_join(ANES.JoinedBlack, Census.Black) %>% View()
Census.Black$State %>% str_replace("^ ", "")
Census.Black$State %>% str_replace("^\\s+", "")
Census.Black$State <- Census.Black$State %>% str_replace("^\\s+", "")
full_join(ANES.JoinedBlack, Census.Black) %>% View()
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(ANEES_PCT.Black = round((n / Total.Black), digits = 3))
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(ANES_PCT.Black = round((n / Total.Black), digits = 3))
ANES.JoinedBlack
ANES.Black <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a) %>%
filter(VCF0105a == 2)
ANES.Total <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State) %>%
rename(ANES_Total.Black = n)
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(ANES_PCT.Black = round((n / Total.Black), digits = 3))
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(ANES_PCT.Black = round((n / ANES_Total.Black), digits = 3))
ANES.JoinedBlack
ANES.Black
ANES.Black <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a) %>%
filter(VCF0105a == 2) %>%
rename(ANES_Total.Black = n)
ANES.Total <- ANES %>% subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State) %>%
rename(ANES_Total.State = n)
ANES.Black
ANES.Total
ANES.Black
ANES.Total
ANES.JoinedBlack <- full_join(ANES.Black, ANES.Total) %>%
mutate(ANES_PCT.Black = round((ANES_Total.Black / ANES_Total.State), digits = 3))
ANES.JoinedBlack
full_join(ANES.JoinedBlack, Census.Black) %>% View()
View(ANES)
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State, wt = VCF0009z)
ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a, wt = VCF0009z)
ANES.Black_WT <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(VCF0105a, wt = VCF0009z) %>%
filter(VCF0105a == 2) %>%
rename(ANES_Total.BlackWT = n)
ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0009z)
ANES.State_WT <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0009z)
ANES.State_WT
ANES.Black_WT
ANES.State_WT <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0009z) %>%
rename(ANES_Total.StateWT = n)
full_join(ANES.Black_WT, ANES.State_WT)
full_join(ANES.Black_WT, ANES.State_WT) %>% mutate(ANES_Black.pct.wt = ANES_Total.BlackWT/ANES_Total.StateWT)
ANES.JoinedBlack
full_join(ANES.JoinedBlack, ANES.Black_WT)
ANES.JoinedBlack <-  full_join(ANES.JoinedBlack, ANES.Black_WT) %>%
full_join(ANES.State_WT) %>%
mutate(ANES_Black.pct.wt = ANES_Total.BlackWT/ANES_Total.StateWT)
ANES.JoinedBlack
View(ANES.JoinedBlack)
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State)
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State, wt = VCF0009z)
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State, wt = VCF0009z) %>% sum(n)
test <- ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(State, wt = VCF0009z)
sum(test$n)
test
ANES <- read_sav("data/ANES_Cumulative.sav") %>% select(VCF0009z, VCF0004, VCF0102,
VCF0105a, VCF0107, VCF0112,
VCF0114, VCF0115, VCF0128,
VCF0129, VCF0901a, VCF0111)
ANES$State <- sapply(ANES$VCF0901a, cdlTools::fips, to = "Name")
state.pop_ANES <- ANES.2020 %>% group_by(State) %>%
summarise(ANES.total = n()) %>%
mutate(ANES.pct = (ANES.total / nrow(ANES.2020)) * 100)
state.pop_ANES
nrow(ANES.2020)
weighted.state.pop_ANES <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0009z) %>%
mutate(ANES.pctWT = (n / 8280) * 100) %>%
rename(n.WT = n)
ANES$State <- sapply(ANES$VCF0901a, cdlTools::fips, to = "Name")
test
View(test)
sum(test$n)
colSums(test$n)
sum(test[,2])
test <- ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(VCF0105a, wt = VCF0009z)
sum(test$n)
weighted.state.pop_ANES <- ANES %>%
subset(VCF0004 == 2020) %>%
group_by(State) %>%
count(State, wt = VCF0009z) %>%
mutate(ANES.pctWT = (n / 8280) * 100) %>%
rename(n.WT = n)
sum(weighted.state.pop_ANES$n)
sum(weighted.state.pop_ANES$n.WT)
weighted.state.pop_ANES
sum(weighted.state.pop_ANES$ANES.pctWT)
joined.pop <- full_join(weighted.state.pop_ANES, state.pop_ANES) %>%
full_join(state.pop_cen)
joined.pop
joined.pop$Pop_Difference <- (joined.pop$ANES.pct - joined.pop$Census.pct) %>% round(digits = 3)
joined.pop$Pop_Difference.wt <- (joined.pop$ANES.pctWT - joined.pop$Census.pct) %>% round(digits = 3)
# Integrate this into main code
joined.pop <- joined.pop %>% rename(ANES.totalWT = n.WT)
joined.pop
ANES.JoinedBlack
test.join <- full_join(joined.pop, ANES.JoinedBlack)
View(test.join)
Census.Black
Census.Black$State <- Census.Black$State %>% str_replace("^\\s+", "") %>%
rename(Census.Black_pct)
Census.Black$State <- Census.Black$State %>% str_replace("^\\s+", "") %>%
rename(Census.Black_pct = Black.pct)
Census.Black <- Census.Black %>%
rename(Census.Black_pct = Black.pct)
full_join(ANES.JoinedBlack, Census.Black) %>% View()
ANES.JoinedBlack <-  full_join(ANES.JoinedBlack, ANES.Black_WT) %>%
full_join(ANES.State_WT) %>%
mutate(ANES_Black.pct.wt = ANES_Total.BlackWT/ANES_Total.StateWT)
test.join <- full_join(joined.pop, ANES.JoinedBlack)
ANES.JoinedBlack <- full_join(ANES.JoinedBlack, Census.Black)
ANES.JoinedBlack <-  full_join(ANES.JoinedBlack, ANES.Black_WT) %>%
full_join(ANES.State_WT) %>%
mutate(ANES_Black.pct.wt = ANES_Total.BlackWT/ANES_Total.StateWT)
test.join <- full_join(joined.pop, ANES.JoinedBlack)
Census.Black_pct - ANES_Black.pct.wt
with(test.join, (Census.Black_pct - ANES_Black.pct.wt))
ANES %>% subset(VCF0004 == 2020) %>% group_by(State) %>% count(VCF0105a, wt = VCF0009z)
test.join$ANES_PCT.Black[is.na(test.join$ANES_PCT.Black)]
test.join$ANES_PCT.Black[is.na(test.join$ANES_PCT.Black)] <- 0
test.join$ANES_Black.pct.wt[is.na(test.join$ANES_Black.pct.wt)]
test.join$ANES_Black.pct.wt[is.na(test.join$ANES_Black.pct.wt)] <- 0
with(test.join, (Census.Black_pct - ANES_Black.pct.wt))
test.join <- test.join %>% mutate(
Black_Difference = (Census.Black_pct - ANES_PCT.Black),
Black_Difference.WT = (Census.Black_pct - ANES_Black.pct.wt)
)
saveRDS(test.join, file = "data/Joined_Pop.rds")
runApp('Test')
View(test.join)
runApp('Test')
joined.pop
runApp('Test')
hcmap(
"countries/us/us-all",
showInLegend =F,
data = test.join,
value = "Pop_Difference",
name = "State"
)
test.join
test.join <- test.join[c(1:51),]
hcmap(
"countries/us/us-all",
showInLegend =F,
data = test.join,
value = "Pop_Difference",
name = "State"
)
library(tidyverse)
library(haven)
library(janitor)
library(gmodels)
library(cdlTools)
library(highcharter)
library(ggplot2)
hcmap(
"countries/us/us-all",
showInLegend =F,
data = test.join,
value = "Pop_Difference",
name = "State"
)
hcmap(
"countries/us/us-all",
showInLegend =F,
data = joined.pop,
value = "Difference",
name = "State"
)
joined.pop
hcmap(
"countries/us/us-all",
showInLegend =F,
data = joined.pop,
value = "Pop_Difference",
name = "State"
)
joined.pop$Pop_Difference
test.join$Pop_Difference
hcmap(
"countries/us/us-all",
showInLegend =F,
data = test.join,
value = "Pop_Difference",
name = "State"
)
new.data <- test.join %>% select(
State,
Pop_Difference,
Pop_Difference.wt,
Black_Difference,
Black_Difference.WT
)
hcmap(
"countries/us/us-all",
showInLegend =F,
data = new.data,
value = "Pop_Difference",
name = "State"
)
saveRDS(new.data, file = "data/test_data.rds")
test.data <- readRDS("data/test_data.rds")
shiny::runApp('Test')
runApp('Test')
test.data
select(new.data, c(1,2))
select(new.data, c(2,3))
runApp('Test')
runApp('Test')
runApp('Test')
test.data
runApp('Test')
runApp('Test')
test.data
runApp('Test')
hcmap(
"countries/us/us-all",
showInLegend =F,
data = new.data,
value = "Black_Difference",
name = "State"
)
test.data
runApp('Test')
runApp('Test')
runApp('Test')
shiny::runApp()
runApp()
runApp('~/R Projects/Airports')
runApp('~/R Projects/Airports')
runApp('~/R Projects/Airports')
runApp('~/R Projects/Airports')
runApp('~/R Projects/Airports')
test.data <- readRDS("C:\\Users\\tjmay\\OneDrive\\Documents\\R Projects\\Survey Demographics\\data\\test_data.rds")
ui = fluidPage(
sidebarPanel(
selectInput(inputID = "inVars", label = "Demographic:",
choices = c("Population" = "Pop", "Race and Ethnicity" = "Black"))
),
mainPanel(
column(12,
dataTableOutput('table')
)
)
)
runApp('~/R Projects/Survey Demographics/test.2')
?selectInput
ui = fluidPage(
sidebarPanel(
selectInput(inputId = "inVars", label = "Demographic:",
choices = c("Population" = "Pop", "Race and Ethnicity" = "Black"))
),
mainPanel(
column(12,
dataTableOutput('table')
)
)
)
test.data <- readRDS("C:\\Users\\tjmay\\OneDrive\\Documents\\R Projects\\Survey Demographics\\data\\test_data.rds")
ui = fluidPage(
sidebarPanel(
selectInput(inputId = "inVars", label = "Demographic:",
choices = c("Population" = "Pop", "Race and Ethnicity" = "Black"))
),
mainPanel(
column(12,
dataTableOutput('table')
)
)
)
server = function(input, output) {
data <- reactive({
select(test.data, starts_with(input$inVars))
})
output$table <- renderDataTable(data())
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
new.data
new.data %>% select(1)
new.data %>% select(c(1, starts_with("Pop"))
new.data %>% select(c(1, starts_with("Pop")))
new.data %>% select(c(starts_with("Pop")))
new.data %>% select(c(starts_with("Pop"))) %>% select(ends_with("wt"))
test.data
test.data <- test.data %>% rename(Pop_Difference.wt = Pop_Difference.WT)
test.data
test.data <- test.data %>% rename(Pop_Difference.WT = Pop_Difference.wt)
test.data
runApp()
hcmap(
"countries/us/us-all",
showInLegend =F,
data = new.data,
value = 2,
name = "State"
)
hcmap(
"countries/us/us-all",
showInLegend =F,
data = new.data,
value = 2,
name = "State"
)
runApp()
runApp()
runApp()
test.data
runApp()
runApp()
ANES_2020.2
